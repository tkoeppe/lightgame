name: BuildAndTest

on:
  pull_request:
  push:
    branches: [ 'main', 'beta' ]

jobs:
  build-with-bazel:
    name: ${{matrix.cfg.name}}

    runs-on: ${{matrix.cfg.os}}

    strategy:
      matrix:
        cfg:
          - { name: 'Linux GCC', os: 'ubuntu-22.04', cc: 'g++', flags: }
          - { name: 'Linux LLVM/libc++', os: 'ubuntu-22.04', cc: 'clang++', flags: '--config=libc++' }

    env:
      CC: ${{matrix.cfg.cc}}
      BAZEL_USE_CPP_ONLY_TOOLCHAIN: 1

    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v3

      - name: Install infrastructure (Linux)
        run: |
          sudo ln -s /usr/lib/llvm-12/include/c++/v1 /usr/include/c++/v1

      - name: build
        env:
          BAZEL_RULES_QT_DIR: ${{ env.Qt5_DIR }}
        run: bazel build -c opt --dynamic_mode=off --show_progress_rate_limit=10 --linkopt=-L${{ env.Qt5_DIR }}/lib :game_benchmark :game_cli :game_qt

      - name: test
        env:
          BAZEL_RULES_QT_DIR: ${{ env.Qt5_DIR }}
        run: bazel test -c opt --dynamic_mode=off --show_progress_rate_limit=10 --linkopt=-L${{ env.Qt5_DIR }}/lib :game_test

  build-for-android:
    name: 'For Android'
    runs-on: 'ubuntu-22.04'
    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'linux'
          target: 'android'
          archives: 'qtbase qtsvg'

      - name: Run QMake
        run: qmake -spec android-clang "QT += svg" cornerpaint.pro

      - name: Build
        run: make -j2 apk_install_target

      - name: List
        run: find -L . -type f -name "*.so*"

      - name: Deploy
        run: androiddeployqt --input android-cornerpaint-deployment-settings.json --output android-build --android-platform android-29 --gradle

      - name: Show
        run: find -L android-build -type f
